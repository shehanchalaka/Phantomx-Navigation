<launch>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find phantomx_description)/urdf_mk3/phantomx.xacro'" />

  <!-- Publish the robot state (TF) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" >
    <param name="publish_frequency" value="20.0" />
  </node>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find phantomx_gazebo)/worlds/phantomx.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>  

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model phantomx -param robot_description"/>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <!--<rosparam file="$(find phantomx_gazebo)/config/gazebo_control.yaml" command="load"/>--> 

  <!-- load the controllers -->
  <!--<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="joint_state_controller 
                            AL_joint_trajectory_controller
                            AR_joint_trajectory_controller
                            BL_joint_trajectory_controller
                            BR_joint_trajectory_controller
                            CL_joint_trajectory_controller
                            CR_joint_trajectory_controller" />-->

  <rosparam file="$(find phantomx_gazebo)/config/joint_params.yaml" command="load"/>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" args="joint_state_controller 
                            AL_coxa_joint AL_femur_joint AL_tibia_joint
                            AR_coxa_joint AR_femur_joint AR_tibia_joint
                            BL_coxa_joint BL_femur_joint BL_tibia_joint
                            BR_coxa_joint BR_femur_joint BR_tibia_joint
                            CL_coxa_joint CL_femur_joint CL_tibia_joint
                            CR_coxa_joint CR_femur_joint CR_tibia_joint" />

  <!-- Logitech F710 wireless gamepad -->
  <!--param name="joy_node/dev" value="/dev/input/js0" />
  <node name="joy_node" pkg="joy" type="joy_node" /-->

  <!-- ros_control launch file -->
  <!-- include file="$(find phantomx_control)/launch/phantomx_control.launch" / -->

  <node name="sensor_publisher" pkg="phantomx_gazebo" type="sensor_publisher" />

</launch>
